import time
import random


'''
–ú–∞–ª—å—Ü–µ–≤ –î–º–∏—Ç—Ä–∏–π, –ê–°–£8-24-1–º

–ó–∞–¥–∞—á–∞ 1. 
    –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ–∏—Å–∫–∞ (–º–æ–∂–Ω–æ 
–≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –ª—é–±–æ–π –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ): 
- –ê–í–õ-–¥–µ—Ä–µ–≤–æ; 
- –∫—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ; 
- –ê–ê-–¥–µ—Ä–µ–≤–æ; 
- 2-3 –¥–µ—Ä–µ–≤–æ; 
- Splay-–¥–µ—Ä–µ–≤–æ. 
–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∫–∞–∫–æ–π –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. 
–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –≤ –∫–æ—Ç–æ—Ä–æ–π: 
- —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ (–≤–µ–∫—Ç–æ—Ä) –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ; 
- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º 10^5 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç -10^6 –¥–æ 10^6, 
–∫–∞–∂–¥–æ–µ –∏–∑ –Ω–∏—Ö –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∏ –≤ –¥–µ—Ä–µ–≤–æ; 
- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ 105 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –≤ —Ç–æ–º –∂–µ –¥–∏–∞–ø–∞–∑–æ–Ω–µ, –∫–∞–∂–¥–æ–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ  
–≤ —Å–ø–∏—Å–∫–µ –∏ –≤ –¥–µ—Ä–µ–≤–µ, –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—Å–∫–æ–ª—å–∫–æ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ –≤—Ç–æ—Ä–æ–π 
—Ä–∞–∑ —á–∏—Å–µ–ª –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∏ –≤ –¥–µ—Ä–µ–≤–µ); 

    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Ü–∏–∫–ª–∞ –¥–æ–ª–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å –æ—â—É—Ç–∏–º–æ–µ, –Ω–æ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è 
(–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∏–ª–∏ –¥–µ—Å—è—Ç–∫–æ–≤ —Å–µ–∫—É–Ω–¥). –ï—Å–ª–∏ —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ ‚Äì –ø–æ–ø—Ä–æ–±—É–π—Ç–µ 
—É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –¥–æ 3*10^5 –∏–ª–∏ –µ—â–µ –±–æ–ª—å—à–µ. –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è  
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã) ‚Äì –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª. 
- —Å—Ä–∞–≤–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–æ—á–µ–≤–∏–¥–Ω–æ, —Ä–∞–∑ —Å–ø–∏—Å–æ–∫ –∏ –¥–µ—Ä–µ–≤–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –æ–¥–Ω–∏–º–∏ 
–∏ —Ç–µ–º–∏ –∂–µ —á–∏—Å–ª–∞–º–∏, —Ç–æ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞—Å—Ç—å); 
- —É–±—Ä–∞—Ç—å –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ —Å–ø–∏—Å–∫–µ (–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è –≤ 
–¥–µ—Ä–µ–≤–µ) –∏ –∑–∞–º–µ—Ä–∏—Ç—å, –∫–∞–∫ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã. 
    –ó–∞–º–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ç–æ—á–Ω–æ, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º 
—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π —è–∑—ã–∫–∞. –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –≤ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è—Ö –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞–ø–∏—à–∏—Ç–µ 
—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏.
'''

# –ê–í–õ-–¥–µ—Ä–µ–≤–æ








class AVLNode:
    def __init__(self, key):
        self.key = key      # –ó–Ω–∞—á–µ–Ω–∏–µ —É–∑–ª–∞ (–∫–ª—é—á)
        self.left = None    # –õ–µ–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
        self.right = None   # –ü—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
        self.height = 1     # –í—ã—Å–æ—Ç–∞ —É–∑–ª–∞ (–Ω—É–∂–Ω–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏)

class AVLTree:
    def get_height(self, node):
        return node.height if node else 0
    
    def get_balance(self, node):
        '''
        –ë–∞–ª–∞–Ω—Å. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Ñ–∞–∫—Ç–æ—Ä –±–∞–ª–∞–Ω—Å–∞ (ùêπùêµ):
        ùêπùêµ = –≤—ã—Å–æ—Ç–∞ –ª–µ–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞‚àí–≤—ã—Å–æ—Ç–∞ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞
        –ï—Å–ª–∏ ùêπùêµ = -1, 0, 1 ‚Äî –¥–µ—Ä–µ–≤–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ.
        –ï—Å–ª–∏ ùêπùêµ < -1 –∏–ª–∏ ùêπùêµ > 1 ‚Äî –¥–µ—Ä–µ–≤–æ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ, –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è.
        '''
        return self.get_height(node.left) - self.get_height(node.right) if node else 0

    def rotate_right(self, y):
        x = y.left
        T = x.right
        x.right = y
        y.left = T
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—ã –ø—Ä–µ–¥–∫–æ–≤
        y.height = max(self.get_height(y.left), self.get_height(y.right)) + 1
        x.height = max(self.get_height(x.left), self.get_height(x.right)) + 1
        return x

    def rotate_left(self, x):
        y = x.right
        T = y.left
        y.left = x
        x.right = T
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—ã –ø—Ä–µ–¥–∫–æ–≤
        x.height = max(self.get_height(x.left), self.get_height(x.right)) + 1
        y.height = max(self.get_height(y.left), self.get_height(y.right)) + 1
        return y

    # –í—Å—Ç–∞–≤–∫–∞ (O(log N))
    def insert(self, root, key):
        if not root:
            return AVLNode(key)
        elif key < root.key:
            root.left = self.insert(root.left, key)
        else:
            root.right = self.insert(root.right, key)
        
        root.height = max(self.get_height(root.left), self.get_height(root.right)) + 1
        balance = self.get_balance(root)
        '''
        –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å –¥–µ—Ä–µ–≤–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é 
        –±–∞–ª–∞–Ω—Å–∞ –≤—ã—Å–æ—Ç –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤—å–µ–≤. –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞—Ä—É—à–µ–Ω, 
        –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤—Ä–∞—â–µ–Ω–∏—è –¥–ª—è –µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:

        –ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å, –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —á–µ—Ç—ã—Ä–µ —Ç–∏–ø–∞ –≤—Ä–∞—â–µ–Ω–∏–π:
        –ü—Ä–∞–≤–æ–µ (RR) ‚Äî –∫–æ–≥–¥–∞ –≤—ã—Å–æ–∫–∏–π –¥–∏—Å–±–∞–ª–∞–Ω—Å —Å–ø—Ä–∞–≤–∞ (FB = -2, –ø—Ä–∞–≤—ã–π —Ä–µ–±–µ–Ω–æ–∫ –≤—ã—à–µ).
        –õ–µ–≤–æ–µ (LL) ‚Äî –∫–æ–≥–¥–∞ –≤—ã—Å–æ–∫–∏–π –¥–∏—Å–±–∞–ª–∞–Ω—Å —Å–ª–µ–≤–∞ (FB = +2, –ª–µ–≤—ã–π —Ä–µ–±–µ–Ω–æ–∫ –≤—ã—à–µ).
        –õ–µ–≤–æ-–ø—Ä–∞–≤–æ–µ (LR) ‚Äî –∫–æ–≥–¥–∞ –Ω–æ–≤—ã–π —É–∑–µ–ª –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –ø—Ä–∞–≤–æ–≥–æ –ø–æ—Ç–æ–º–∫–∞ –ª–µ–≤–æ–≥–æ —É–∑–ª–∞.
        –ü—Ä–∞–≤–æ-–ª–µ–≤–æ–µ (RL) ‚Äî –∫–æ–≥–¥–∞ –Ω–æ–≤—ã–π —É–∑–µ–ª –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –ª–µ–≤–æ–≥–æ –ø–æ—Ç–æ–º–∫–∞ –ø—Ä–∞–≤–æ–≥–æ —É–∑–ª–∞.
        '''
        if balance > 1 and key < root.left.key:
            return self.rotate_right(root)
        if balance < -1 and key > root.right.key:
            return self.rotate_left(root)
        if balance > 1 and key > root.left.key:
            root.left = self.rotate_left(root.left)
            return self.rotate_right(root)
        if balance < -1 and key < root.right.key:
            root.right = self.rotate_right(root.right)
            return self.rotate_left(root)
        
        return root
    
    # –ü–æ–∏—Å–∫ (O(log N))
    def search(self, root, key):
        # –†–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º –¥–≤–æ–∏—á–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫–∞ 
        # ‚Äî –∏–¥–µ–º –≤–ª–µ–≤–æ, –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ, –∏ –≤–ø—Ä–∞–≤–æ, –µ—Å–ª–∏ –±–æ–ª—å—à–µ.
        if not root or root.key == key:
            return root is not None
        elif key < root.key:
            return self.search(root.left, key)
        else:
            return self.search(root.right, key)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
N = 10**5                   # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª
–º–∏–Ω, –º–∞–∫—Å = -10**6, 10**6   # –¥–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π —á–∏—Å–µ–ª
—Å–ª—É—á–∞–π–Ω—ã–µ_—á–∏—Å–ª–∞ = [random.randint(–º–∏–Ω, –º–∞–∫—Å) for _ in range(N)]
–Ω–æ–≤—ã–µ_—á–∏—Å–ª–∞ = [random.randint(–º–∏–Ω, –º–∞–∫—Å) for _ in range(N)]

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞
—Å–ø–∏—Å–æ–∫_—á–∏—Å–µ–ª  = []
–Ω–∞—á–∞–ª–æ1 = time.time()
—Å–ø–∏—Å–æ–∫_—á–∏—Å–µ–ª.extend(—Å–ª—É—á–∞–π–Ω—ã–µ_—á–∏—Å–ª–∞)
–∫–æ–Ω–µ—Ü1 = time.time() - –Ω–∞—á–∞–ª–æ1

# –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
–Ω–∞—á–∞–ª–æ2 = time.time()
—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_—Å–ø–∏—Å–æ–∫ = sum(1 for —á–∏—Å–ª–æ in –Ω–æ–≤—ã–µ_—á–∏—Å–ª–∞ if —á–∏—Å–ª–æ in —Å–ø–∏—Å–æ–∫_—á–∏—Å–µ–ª)
–∫–æ–Ω–µ—Ü2 = time.time() - –Ω–∞—á–∞–ª–æ2


# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ê–í–õ-–¥–µ—Ä–µ–≤–∞
avl_–¥–µ—Ä–µ–≤–æ = AVLTree()
–¥–µ—Ä–µ–≤–æ = None
–Ω–∞—á–∞–ª–æ3 = time.time()
for —á–∏—Å–ª–æ in —Å–ª—É—á–∞–π–Ω—ã–µ_—á–∏—Å–ª–∞:
    –¥–µ—Ä–µ–≤–æ = avl_–¥–µ—Ä–µ–≤–æ.insert(–¥–µ—Ä–µ–≤–æ, —á–∏—Å–ª–æ)
–∫–æ–Ω–µ—Ü3 = time.time() - –Ω–∞—á–∞–ª–æ3

# –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ
–Ω–∞—á–∞–ª–æ4 = time.time()
—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_–¥–µ—Ä–µ–≤–æ = sum(1 for —á–∏—Å–ª–æ in –Ω–æ–≤—ã–µ_—á–∏—Å–ª–∞ if avl_–¥–µ—Ä–µ–≤–æ.search(–¥–µ—Ä–µ–≤–æ, —á–∏—Å–ª–æ))
–∫–æ–Ω–µ—Ü4 = time.time() - –Ω–∞—á–∞–ª–æ4


# –ü–æ–≤—Ç–æ—Ä–Ω—ã–π —Ç–µ—Å—Ç –±–µ–∑ —Å–ø–∏—Å–∫–∞
# *–£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–ø–∏—Å–∫–∞ –∏ –∑–∞–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ—Ä–µ–≤–∞
–Ω–∞—á–∞–ª–æ5 = time.time()
—Ç–æ–ª—å–∫–æ_—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_–¥–µ—Ä–µ–≤–æ = sum(1 for —á–∏—Å–ª–æ in –Ω–æ–≤—ã–µ_—á–∏—Å–ª–∞ if avl_–¥–µ—Ä–µ–≤–æ.search(–¥–µ—Ä–µ–≤–æ, —á–∏—Å–ª–æ))
–∫–æ–Ω–µ—Ü5 = time.time() - –Ω–∞—á–∞–ª–æ5

print('[ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ ]')
print(f"–í—Ä–µ–º—è –≤—Å—Ç–∞–≤–∫–∏ –≤ —Å–ø–∏—Å–æ–∫: {–∫–æ–Ω–µ—Ü1:.4f} —Å–µ–∫")
print(f"–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ø–∏—Å–∫–µ: {–∫–æ–Ω–µ—Ü2:.4f} —Å–µ–∫")
print(f"–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ: {—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_—Å–ø–∏—Å–æ–∫}")
print('\n[ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ê–í–õ-–¥–µ—Ä–µ–≤–∞ ]')
print(f"–í—Ä–µ–º—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–æ: {–∫–æ–Ω–µ—Ü3:.4f} —Å–µ–∫")
print(f"–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ: {–∫–æ–Ω–µ—Ü4:.4f} —Å–µ–∫")
print(f"–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ: {—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_–¥–µ—Ä–µ–≤–æ}")
print(f"–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ (–±–µ–∑ —Å–ø–∏—Å–∫–∞): {–∫–æ–Ω–µ—Ü5:.4f} —Å–µ–∫")

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
assert —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_—Å–ø–∏—Å–æ–∫ == —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è_–¥–µ—Ä–µ–≤–æ, '–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!'
print('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç!')

'''
[ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ ]
–í—Ä–µ–º—è –≤—Å—Ç–∞–≤–∫–∏ –≤ —Å–ø–∏—Å–æ–∫: 0.0000 —Å–µ–∫
–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ø–∏—Å–∫–µ: 30.9122 —Å–µ–∫
–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ: 4987

[ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ê–í–õ-–¥–µ—Ä–µ–≤–∞ ]
–í—Ä–µ–º—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–æ: 0.5260 —Å–µ–∫
–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ: 0.1110 —Å–µ–∫
–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ: 4987
–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –ê–í–õ-–¥–µ—Ä–µ–≤–µ (–±–µ–∑ —Å–ø–∏—Å–∫–∞): 0.1080 —Å–µ–∫
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç!
'''